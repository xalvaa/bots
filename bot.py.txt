from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

TOKEN = "8026101501:AAG2oj032H-QotYbYAHnhcOES2niIu43rCo"

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu_keyboard():
    return ReplyKeyboardMarkup([
        [KeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
        [KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∫–æ–ª–µ"), KeyboardButton("‚ùì FAQ")]
    ], resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ñ—É—Ç–±–æ–ª—å–Ω—É—é —à–∫–æ–ª—É '–ù–µ–≤—Å–∫–∏–µ –¢–∏–≥—Ä—ã'! üêØ‚öΩ\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
def application(update: Update, context: CallbackContext):
    update.message.reply_text(
        "–ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ:\n"
        "1. –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —Ä–µ–±—ë–Ω–∫–∞\n"
        "2. –í–æ–∑—Ä–∞—Å—Ç\n"
        "3. –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω —Ä–æ–¥–∏—Ç–µ–ª—è\n\n"
        "–ü—Ä–∏–º–µ—Ä:\n"
        "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤, 8 –ª–µ—Ç, +79111234567"
    )
    context.user_data['waiting_for_application'] = True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
def handle_message(update: Update, context: CallbackContext):
    if context.user_data.get('waiting_for_application'):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª –∏–ª–∏ –ë–î)
        application_text = update.message.text
        with open("applications.txt", "a") as f:
            f.write(f"{application_text}\n")
        
        update.message.reply_text(
            "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.\n"
            "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            reply_markup=main_menu_keyboard()
        )
        context.user_data['waiting_for_application'] = False
    else:
        text = update.message.text
        if text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∫–æ–ª–µ":
            update.message.reply_text(
                "üèüÔ∏è –§—É—Ç–±–æ–ª—å–Ω–∞—è —à–∫–æ–ª–∞ '–ù–µ–≤—Å–∫–∏–µ –¢–∏–≥—Ä—ã'\n\n"
                "üìç –ê–¥—Ä–µ—Å: –≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, —É–ª. –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è, 1\n"
                "üïí –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: –ü–Ω-–ü—Ç 9:00-21:00\n"
                "‚öΩ –í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã: 5-16 –ª–µ—Ç\n"
                "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã: +7 (911) 123-45-67\n\n"
                "–ù–∞—à–∞ —à–∫–æ–ª–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —é–Ω—ã—Ö —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤."
            )
        elif text == "‚ùì FAQ":
            update.message.reply_text(
                "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
                "1. –° –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞—é—Ç? - –° 5 –ª–µ—Ç\n"
                "2. –ö–∞–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–Ω—è—Ç–∏–π? - 3000 —Ä—É–±/–º–µ—Å\n"
                "3. –ù—É–∂–Ω–∞ –ª–∏ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∞? - –î–∞, —Ñ–æ—Ä–º–∞ –∏ –±—É—Ç—Å—ã\n"
                "4. –ï—Å—Ç—å –ª–∏ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ? - –î–∞, –±–µ—Å–ø–ª–∞—Ç–Ω–æ"
            )
        else:
            update.message.reply_text(
                "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.",
                reply_markup=main_menu_keyboard()
            )

def main():
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(MessageHandler(Filters.regex("^üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É$"), application))
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()